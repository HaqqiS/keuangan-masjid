// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

model Post {
    id        Int      @id @default(autoincrement())
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    createdBy   User   @relation(fields: [createdById], references: [id])
    createdById String

    @@index([name])
}

// Necessary for Next auth
model Account {
    id                       String  @id @default(cuid())
    userId                   String
    type                     String
    provider                 String
    providerAccountId        String
    refresh_token            String? // @db.Text
    access_token             String? // @db.Text
    expires_at               Int?
    token_type               String?
    scope                    String?
    id_token                 String? // @db.Text
    session_state            String?
    user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    refresh_token_expires_in Int?

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(ulid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum UserRole {
    KETUA
    BENDAHARA
    PENGURUS
}

model User {
    id            String    @id @default(uuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    password      String?
    role          UserRole  @default(PENGURUS)

    accounts     Account[]
    sessions     Session[]
    kategoris    Kategori[]
    Post         Post[]
    Pemasukans   Pemasukan[]
    Pengeluarans Pengeluaran[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

enum TypeKategori {
    PEMASUKAN
    PENGELUARAN
}

model Kategori {
    id   String       @id @default(uuid())
    name String
    type TypeKategori

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    createdBy    User          @relation(fields: [createdById], references: [id])
    createdById  String
    Pemasukans   Pemasukan[]
    Pengeluarans Pengeluaran[]

    @@index([name, type])
}

model Pemasukan {
    id         String  @id @default(uuid())
    name       String
    keterangan String?
    jumlah     Decimal

    kategori   Kategori @relation(fields: [kategoriId], references: [id])
    kategoriId String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    createdBy   User   @relation(fields: [createdById], references: [id])
    createdById String
}

model Pengeluaran {
    id         String  @id @default(uuid())
    name       String
    keterangan String?
    jumlah     Decimal

    kategori   Kategori @relation(fields: [kategoriId], references: [id])
    kategoriId String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    createdBy   User   @relation(fields: [createdById], references: [id])
    createdById String
}
